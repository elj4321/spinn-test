buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.4.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'application'

jar {
    baseName = 'gs-spring-boot-docker'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

def dockerReg = "localhost:5000"
def imageName = "spinntestbuild"
def tagName = "master"

dependencies {
    // tag::jetty[]
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty")
    // end::jetty[]
    // tag::actuator[]
    compile("org.springframework.boot:spring-boot-starter-actuator")
    // end::actuator[]
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

task buildImage(type: Exec) {
  description "Build image from Dockerfile"
  group "Docker"
  executable "docker"
  args "build"
  args "-t=${imageName}:${tagName}"
  args "."
}

buildImage.dependsOn(build)

task tagImage(type: Exec) {
  group "Docker"
  description "Tag image for push to docker registry"
  executable "docker"
  args "tag"
  args "${imageName}:${tagName}"
  args "${dockerReg}/${imageName}:${tagName}"
}

tagImage.dependsOn(buildImage)

task pushImage(type: Exec) {
  group "Docker"
  description "Push image to docker registry"
  executable "docker"
  args "push"
  args "${dockerReg}/${imageName}:${tagName}"
}

pushImage.dependsOn(tagImage)
